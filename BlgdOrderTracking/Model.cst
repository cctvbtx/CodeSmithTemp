<%@ CodeTemplate Language="C#" TargetLanguage="C#" ResponseEncoding="utf-8" Description="数据模型模板"  %>
<%@ Register Name="Common" Template="Common.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Property Name="DB" Type="SchemaExplorer.DatabaseSchema" Default="NGIG_II" Category="Data" Description="数据库对象" %>
<%@ Property Name="Table" Type="SchemaExplorer.TableSchema" Default="" Optional="False" Category="Data" Description="数据表对象" OnChanged="" Editor="" EditorBase="" Serializer="" %>
<%@ Property Name="FileName" Type="String" Default="d:\\a.cs" Optional="False" Category="内容" Description="输出的文件路径" OnChanged="" Editor="" EditorBase="" Serializer="" %>
<%@ Property Name="OutputFile" Type="Boolean" Default="false" Optional="False" Category="内容" Description="是否输出到文件" OnChanged="" Editor="" EditorBase="" Serializer="" %>
<%@ Property Name="NameSpace" Type="String" Default="BLGD.OrderTracking" Optional="False" Category="内容" Description="命名空间" OnChanged="" Editor="" EditorBase="" Serializer="" %>
<%@ Property Name="Creater" Type="String" Default="jinchuanliang" Optional="False" Category="内容" Description="创建者" OnChanged="" Editor="" EditorBase="" Serializer="" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.IO" %> 
 
<%
Common com = new Common();
string newTableName = Table.Name;//.Remove(0,3);
string prefix = "";
%>
/*----------------------------------------------------------------
// Copyright (C) 2017 佰林格都信息科技有限公司 版权所有。 
//
// 文件名：<%= prefix + newTableName%>
// 文件功能描述：<%=Table.Description%>
//
// 创建标识：<%=Creater%> <%=DateTime.Now.ToString("yyyy-MM-dd")%>
//
// 修改标识：
// 修改描述：
//----------------------------------------------------------------*/
using System; 

namespace <%=NameSpace%>.Entity
{
    /// <summary>
    /// <%=Table.Description%>
    /// [<%=Table.Name%>]数据模型
    /// </summary>
	/// <author><%=Creater%> <%=DateTime.Now.ToString("yyyy-MM-dd")%></author> 
    public class <%=prefix + newTableName%>Entity
    {
		/// <summary>
    	/// 初始化默认值构造函数
    	/// </summary>
		/// <author><%=Creater%> <%=DateTime.Now.ToString("yyyy-MM-dd")%></author>
		public <%=prefix + newTableName%>Entity()
		{
       	<%for(int i = 0;i<Table.Columns.Count;i++)%>
		<%{%>
			<%=com.ConvertToPascal2(Table.Columns[i].Name)%> = <%=com.SetDataTypeDefaultValue(Table.Columns[i].DataType)%>;
		<%}%>
		}
		
		#region [<%=Table.Name%>]表字段属性
		
		<%for(int i = 0;i<Table.Columns.Count;i++)%>
		<%{%>
		
		/// <summary>
		/// <%=Table.Columns[i].Description%>
		/// </summary>         
		public <%=com.GetCSharpDataType(Table.Columns[i])%> <%=com.ConvertToPascal2(Table.Columns[i].Name)%>
		{
			set; 
			get;
		}
		
		<%}%>
		#endregion
    }
	
	 
}

<script runat="template">
///重写呈现方法，输出到文件
public override void Render(TextWriter writer)
{	
	if(OutputFile)
	{
		StreamWriter sw = new StreamWriter(FileName,true);
		this.Response.AddTextWriter(sw);
		base.Render(writer);
		sw.Close();
	}		
	else
	{
		base.Render(writer);
	}	
}
</script>
